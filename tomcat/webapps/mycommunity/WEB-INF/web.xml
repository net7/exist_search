<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
  Copyright 2004 The Apache Software Foundation

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<!DOCTYPE web-app
    PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
    "http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

    <display-name>Servlets for eXist and search - for the 'mycommunity' Talia scholarly community</display-name>
    <description>
      Servlets for feeding eXist with data
      to support various kinds of search,
      and for doing the search.
      Supports both normal search (full text, metadata)
      and macrocontribution search (full text, metadata, restriction to subsets).
    </description>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

    <!--
    Context initialization parameters that define shared
    String constants used within your application, which
    can be customized by the system administrator who is
    installing your application.  The values actually
    assigned to these parameters can be retrieved in a
    servlet or JSP page by calling:

        String value =
          getServletContext().getInitParameter("name");

    where "name" matches the <param-name> element of
    one of these initialization parameters.

    You can define any number of context initialization
    parameters, including zero.
    -->

    <!-- the place where Tomcat, eXist and the servlets reside, etc -->

    <context-param>
      <param-name>tomcatHost</param-name>
      <param-value>gandalf.aksis.uib.no</param-value>
      <description>url of server where Tomcat and eXist and the servlets reside</description>
    </context-param>

    <context-param>
      <param-name>tomcatPort</param-name>
      <param-value>8080</param-value>
      <description>the port number for Tomcat (and eXist)</description>
    </context-param>

    <context-param>
      <param-name>existContextpath</param-name>
      <param-value>exist-1.2.0</param-value>
      <description>eXist runs as a web application under Tomcat.
                   this parameter is the "context path" of eXist
                   = the web application name of eXist
                   = the name of the subdirectory of {tomcat_home}/webapps/
                   where eXist resides</description>
    </context-param>

    <context-param>
      <param-name>existPass</param-name>
      <param-value>hat81ygg</param-value>
      <description>admin password for eXist</description>
    </context-param>

    <context-param>
      <param-name>collectionName</param-name>
      <param-value>mycollection</param-value>
      <description>name of the eXist collection where the contributions are stored</description>
    </context-param>

    <!-- not used
    <context-param>
      <param-name>logFileName</param-name>
      <param-value>servlets.log</param-value>
      <description>name of log file, if ###</description>
    </context-param>
    -->

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

    <!--
    Servlet definitions for the servlets that make up
    your web application, including initialization
    parameters.  With Tomcat, you can also send requests
    to servlets not listed here with a request like this:

      http://localhost:8080/{context-path}/servlet/{classname}

    but this usage is not guaranteed to be portable.  It also
    makes relative references to images and other resources
    required by your servlet more complicated, so defining
    all of your servlets (and defining a mapping to them with
    a servlet-mapping element) is recommended.

    Servlet initialization parameters can be retrieved in a
    servlet or JSP page by calling:

        String value =
          getServletConfig().getInitParameter("name");

    where "name" matches the <param-name> element of
    one of these initialization parameters.

    You can define any number of servlets, including zero.
    -->

    <!-- define servlets -->

    <servlet>
      <servlet-name>FeedExist</servlet-name>
      <servlet-class>FeedExist</servlet-class>
      <description>
        This servlet handles requests
          .../FeedExist/purge (clear the eXist collection of all contributions)
        and
          .../FeedExist/store (feed eXist with one contribution)
      </description>
    </servlet>

    <servlet>
      <servlet-name>ServiceToFeedExist</servlet-name>
      <servlet-class>ServiceToFeedExist</servlet-class>
      <description>
        This servlet is a preliminary thing
        that simulates a Talia service
        that feeds eXist with _all_ contributions.
        Should be removed when the Talia service has been implemented
      </description>
    </servlet>

    <servlet>
      <servlet-name>NormalSearch</servlet-name>
      <servlet-class>NormalSearch</servlet-class>
      <description>
        This servlet handles a "normal" search request
          .../NormalSearch
      </description>
    </servlet>

    <servlet>
      <servlet-name>Search</servlet-name>
      <servlet-class>Search</servlet-class>
      <description>
        This servlet handles both a normal and a macrocontribution search request
          .../Search
      </description>
    </servlet>

    <servlet>
      <servlet-name>XmlSearch</servlet-name>
      <servlet-class>XmlSearch</servlet-class>
      <description>
        This servlet handles an experimental xml search request
          .../XmlSearch
      </description>
    </servlet>

    <!-- define mappings -->

    <servlet-mapping>
      <!--
      map requests
      .../FeedExist/purge
      and
      .../FeedExist/store
      to
      servlet FeedExist
      -->
      <servlet-name>FeedExist</servlet-name>
      <url-pattern>/FeedExist/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
      <servlet-name>ServiceToFeedExist</servlet-name>
      <url-pattern>/ServiceToFeedExist</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
      <servlet-name>NormalSearch</servlet-name>
      <url-pattern>/NormalSearch</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
      <servlet-name>Search</servlet-name>
      <url-pattern>/Search</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
      <servlet-name>XmlSearch</servlet-name>
      <url-pattern>/XmlSearch</url-pattern>
    </servlet-mapping>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

    <!--
    security constraints
    -->

    <security-constraint>
      <display-name>FeedExist Servlet Security Constraint</display-name>
      <web-resource-collection>
        <web-resource-name>Feeding eXist</web-resource-name>
        <!-- Define the context-relative URL(s) to be protected -->
        <url-pattern>/FeedExist/*</url-pattern>
        <url-pattern>/ServiceToFeedExist</url-pattern>
        <!-- If you list http methods, only those methods are protected -->
        <!--
        <http-method>DELETE</http-method>
        <http-method>GET</http-method>
        <http-method>POST</http-method>
        <http-method>PUT</http-method>
        -->
      </web-resource-collection>
      <auth-constraint>
         <!-- Anyone with one of the listed roles may access this area -->
         <role-name>exist-feeder</role-name>
      </auth-constraint>
    </security-constraint>

    <!-- Default login configuration uses form-based authentication -->
    <login-config>
      <auth-method>BASIC</auth-method>
      <realm-name>FeedExist Servlet</realm-name>
    </login-config>

    <!-- Security roles referenced by this web application -->
    <security-role>
      <role-name>exist-feeder</role-name>
    </security-role>
    <security-role>
      <role-name>exist-searcher</role-name>
    </security-role>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

    <!-- ###what can these be used for? -->
    <!-- Environment entry examples -->
    <!--env-entry>
      <env-entry-description>
        The maximum number of tax exemptions allowed to be set.
      </env-entry-description>
      <env-entry-name>maxExemptions</env-entry-name>
      <env-entry-value>15</env-entry-value>
      <env-entry-type>java.lang.Integer</env-entry-type>
    </env-entry-->

</web-app>

